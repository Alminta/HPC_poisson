import numpy as np

a1 = np.array([313, 1187, 4356, 15542])
b1 = np.array([208, 767, 2796, 9981])

a2 = np.array([0.012459, 0.36294, 10.7376, 368.332])
b2 = np.array([0.014391, 0.48453, 15.3288, 459.978])

x = np.array([25, 50, 100, 200])

# Mflop/s
# for i in range(4):
#     print("(%d,%f)" % (x[i], (x[i] ** 3) * a1[i] * 7 / (a2[i] * 1000000)))
# print("\n")
# for i in range(4):
#     print("(%d,%f)" % (x[i], (x[i] ** 3) * b1[i] * 7 / (b2[i] * 1000000)))


# iterations/s
# for i in range(4):
#     print("(%d,%f)" % (x[i], a1[i] / (a2[i])))
# print("\n")
# for i in range(4):
#     print("(%d,%f)" % (x[i], b1[i] / (b2[i])))


# Parallel

v0_j_n50 = np.array([1, 0.490, 2, 0.246, 4, 0.128, 8, 0.074, 12, 0.053, 16, 0.049, 20, 0.046, 24, 0.046])
v0_j_n100 = np.array([1, 3.596, 2, 1.819, 4, 0.945, 8, 0.504, 12, 0.362, 16, 0.287, 20, 0.244, 24, 0.215])
v0_j_n200 = np.array([1, 45.639, 2, 24.123, 4, 13.415, 8, 9.365, 12, 9.347, 16, 7.676, 20, 6.546, 24, 6.154])

v0_gs_n50 = np.array([1, 1.085, 2, 0.542, 4, 0.276, 8, 0.144, 12, 0.100, 16, 0.100, 20, 0.086, 24, 0.071])
v0_gs_n100 = np.array([1, 9.732, 2, 4.878, 4, 2.497, 8, 1.308, 12, 0.914, 16, 0.715, 20, 0.566, 24, 0.519])
v0_gs_n200 = np.array([1, 83.609, 2, 41.851, 4, 21.256, 8, 10.740, 12, 7.741, 16, 5.870, 20, 5.121, 24, 5.076])

v1_j_n50 = np.array([1, 0.468, 2, 0.245, 4, 0.129, 8, 0.073, 12, 0.054, 16, 0.064, 20, 0.053, 24, 0.055])
v1_j_n100 = np.array([1, 3.639, 2, 1.813, 4, 0.938, 8, 0.517, 12, 0.365, 16, 0.290, 20, 0.250, 24, 0.219])
v1_j_n200 = np.array([1, 45.607, 2, 24.111, 4, 13.429, 8, 9.528, 12, 9.392, 16, 7.607, 20, 6.576, 24, 6.096])

v1_gs_n50 = np.array([1, 1.183, 2, 0.835, 4, 0.507, 8, 0.355, 12, 0.329, 16, 0.563, 20, 0.523, 24, 0.516])
v1_gs_n100 = np.array([1, 10.149, 2, 6.053, 4, 3.202, 8, 1.795, 12, 1.279, 16, 1.764, 20, 1.506, 24, 1.399])
v1_gs_n200 = np.array([1, 85.194, 2, 46.587, 4, 23.747, 8, 12.133, 12, 8.441, 16, 9.144, 20, 7.663, 24, 7.192])

v2_j_n50 = np.array([1, 0.454, 2, 0.240, 4, 0.123, 8, 0.074, 12, 0.053, 16, 0.055, 20, 0.044, 24, 0.049])
v2_j_n100 = np.array([1, 3.542, 2, 1.798, 4, 0.946, 8, 0.497, 12, 0.360, 16, 0.275, 20, 0.239, 24, 0.213])
v2_j_n200 = np.array([1, 45.925, 2, 24.090, 4, 13.263, 8, 9.231, 12, 9.224, 16, 6.865, 20, 5.523, 24, 4.761])

v2_gs_n50 = np.array([1, 1.179, 2, 0.830, 4, 0.516, 8, 0.357, 12, 0.330, 16, 0.549, 20, 0.550, 24, 0.498])
v2_gs_n100 = np.array([1, 10.072, 2, 6.057, 4, 3.175, 8, 1.788, 12, 1.288, 16, 1.728, 20, 1.481, 24, 1.362])
v2_gs_n200 = np.array([1, 84.837, 2, 46.269, 4, 23.631, 8, 12.072, 12, 8.358, 16, 8.971, 20, 7.484, 24, 6.987, ])

arr = v2_j_n200
n = 200
iters = 2000

# Performance
# print("Gauss N=%d iters=%d" % (n,iters))
# for i in range(len(arr)//2):
#     print("(%d,%f)" % (arr[2*i], (n ** 3) * iters * 7 / (arr[2*i+1] * 1000000)))
# print("\n")


# print("Speed-up V2 Gauss N=%d iters=%d" % (n,iters))
# for i in range(len(arr)//2):
#     print("(%d,%f)" % (arr[2*i], arr[1]/arr[2*i+1]))

print("Completion time V2 Jacobi N=%d iters=%d" % (n,iters))
for i in range(len(arr)//2):
    print("(%d,%f)" % (arr[2*i], arr[2*i+1]))